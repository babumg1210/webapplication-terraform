# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    backendServiceArm: 'storage-sc'
    backendAzureRmResourceGroupName: 'ecommerceResourceGroup'
    backendAzureRmStorageAccountName: 'ecommercestorage1210'
    backendAzureRmContainerName: 'webapp'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)' 

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'storage-sc'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'storage-sc'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    commandOptions: '-auto-approve'  # Automatically approve the apply

- script: |
    echo "Web App URL: $(terraform output -raw web_app_url)"
  displayName: 'Output Web App URL'